GLOBAL			GLOBAL
PROC			PROC
IDENTIF			FACTORIAL
(			(
IDENTIF			N
:			:
INT			INT
)			)
:			:
INT			INT
;			;
IDENTIF			FIBONACCI
(			(
IDENTIF			N
:			:
INT			INT
)			)
:			:
INT			INT
;			;
IDENTIF			STRANGE
(			(
IDENTIF			N
:			:
INT			INT
,			,
IDENTIF			C
:			:
INT			INT
)			)
;			;
PROCEDURE			PROCEDURE
IDENTIF			MAIN
;			;
DCL			DCL
IDENTIF			I
:			:
INT			INT
;			;
IDENTIF			START
:			:
INT			INT
;			;
IDENTIF			COUNT
:			:
INT			INT
;			;
BEGIN			BEGIN
FOR			FOR
IDENTIF			I
:=			:=
NUMERIC			1
TO			TO
NUMERIC			20
WRITELN			WRITELN
(			(
IDENTIF			I
,			,
CSTRING			' FACTORIAL IS: '
,			,
IDENTIF			FACTORIAL
(			(
IDENTIF			I
)			)
)			)
;			;
WRITELN			WRITELN
;			;
FOR			FOR
IDENTIF			I
:=			:=
NUMERIC			0
TO			TO
NUMERIC			20
WRITELN			WRITELN
(			(
IDENTIF			I
,			,
CSTRING			' FIBONACCI IS: '
,			,
IDENTIF			FIBONACCI
(			(
IDENTIF			I
)			)
)			)
;			;
WRITELN			WRITELN
;			;
WRITE			WRITE
(			(
CSTRING			'ENTER A POSITIVE INTEGER: '
)			)
;			;
READLN			READLN
(			(
IDENTIF			START
)			)
;			;
IDENTIF			COUNT
:=			:=
NUMERIC			1
;			;
CALL			CALL
IDENTIF			STRANGE
(			(
IDENTIF			START
,			,
IDENTIF			COUNT
)			)
;			;
END			END
PROCEDURE			PROCEDURE
IDENTIF			FACTORIAL
;			;
BEGIN			BEGIN
IF			IF
(			(
IDENTIF			N
=			=
NUMERIC			0
)			)
THEN			THEN
RETURN			RETURN
NUMERIC			1
;			;
ELSE			ELSE
RETURN			RETURN
IDENTIF			N
*			*
IDENTIF			FACTORIAL
(			(
IDENTIF			N
-			-
NUMERIC			1
)			)
;			;
END			END
PROCEDURE			PROCEDURE
IDENTIF			FIBONACCI
;			;
BEGIN			BEGIN
IF			IF
(			(
(			(
IDENTIF			N
=			=
NUMERIC			0
)			)
OR			OR
(			(
IDENTIF			N
=			=
NUMERIC			1
)			)
)			)
THEN			THEN
RETURN			RETURN
NUMERIC			1
;			;
ELSE			ELSE
RETURN			RETURN
IDENTIF			FIBONACCI
(			(
IDENTIF			N
-			-
NUMERIC			1
)			)
+			+
IDENTIF			FIBONACCI
(			(
IDENTIF			N
-			-
NUMERIC			2
)			)
;			;
END			END
PROCEDURE			PROCEDURE
IDENTIF			STRANGE
;			;
BEGIN			BEGIN
IF			IF
(			(
(			(
IDENTIF			N
=			=
NUMERIC			1
)			)
OR			OR
(			(
IDENTIF			C
=			=
NUMERIC			20
)			)
)			)
THEN			THEN
DO			DO
;			;
WRITELN			WRITELN
WRITELN			WRITELN
;			;
RETURN			RETURN
;			;
END			END
;			;
ELSE			ELSE
WRITE			WRITE
(			(
IDENTIF			N
,			,
CSTRING			' '
)			)
;			;
IF			IF
(			(
IDENTIF			N
%			%
NUMERIC			2
=			=
NUMERIC			0
)			)
THEN			THEN
CALL			CALL
IDENTIF			STRANGE
(			(
IDENTIF			N
/			/
NUMERIC			2
,			,
IDENTIF			C
+			+
NUMERIC			1
.			.
NUMERIC			5
)			)
;			;
ELSE			ELSE
CALL			CALL
IDENTIF			STRANGE
(			(
NUMERIC			3
*			*
IDENTIF			N
+			+
NUMERIC			1
,			,
IDENTIF			C
+			+
NUMERIC			1
)			)
;			;
END			END
.			.
